<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.openflow</groupId>
  <artifactId>openflowj</artifactId>
  <version>1.0.3</version>

  <!--
    NOTES:
      -To publish the site to http://openflowj.bitbucket.org:
        mvn clean site:site scm-publish:publish-scm
   -->
  <name>OpenFlowJ</name>
  <description>A Java implemention of the OpenFlow  protocol.  It contains Java objects representing all standard OpenFlow messages, as well as code to serialize/deserialize to/from ByteBuffer objects used in network I/O.</description>
  <developers>
    <developer>
      <name>David Erickson</name>
      <email>daviderickson@cs.stanford.edu</email>
    </developer>
  </developers>
  <contributors>
    <contributor>
      <name>Rob Sherwood</name>
      <email>rob.sherwood@stanford.edu</email>
    </contributor>
  </contributors>
  <packaging>jar</packaging>
  <url>http://openflowj.bitbucket.org</url>
  <licenses>
    <license>
      <name>The OpenFlow License</name>
      <url>http://www.openflowswitch.org/wp/legal/</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  <scm>
    <connection>scm:git:https://bitbucket.org/openflowj/openflowj.git</connection>
    <developerConnection>scm:git:ssh://git@bitbucket.org:openflowj/openflowj.git</developerConnection>
    <url>https://bitbucket.org/openflowj/openflowj</url>
  </scm>
  <properties>
    <!-- Site publishing -->
    <scm-publish.pubScmUrl>scm:git:git@bitbucket.org:openflowj/openflowj.bitbucket.org.git</scm-publish.pubScmUrl>
    <scm-publish.siteDocOuputDirectory>${project.reporting.outputDirectory}</scm-publish.siteDocOuputDirectory>

    <!-- Project building -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <plugin.javadoc.version>2.9.1</plugin.javadoc.version>
    <plugin.scm-publish.version>1.0-beta-2</plugin.scm-publish.version>
  </properties>
  <!-- For GPG release signing, use mvn release:perform -->
  <profiles>
    <profile>
      <id>release-sign-artifacts</id>
      <activation>
        <property>
          <name>performRelease</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>1.1</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <mavenExecutorId>forked-path</mavenExecutorId>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.3</version>
          <dependencies>
            <dependency>
              <groupId>org.apache.maven.doxia</groupId>
              <artifactId>doxia-module-markdown</artifactId>
              <version>1.3</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>2.7</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-scm-publish-plugin</artifactId>
          <version>${plugin.scm-publish.version}</version>
          <inherited>true</inherited>
          <configuration>
            <checkinComment>Publishing Site Docs for
              ${project.artifactId}:${project.version}</checkinComment>
            <!-- Plugins defaults to "target/staging" and since the distributionManagement
              section is difficult, use the standard target/site directory -->
            <content>${scm-publish.siteDocOuputDirectory}</content>
            <skipDeletedFiles>true</skipDeletedFiles>
            <pubScmUrl>${scm-publish.pubScmUrl}</pubScmUrl>
            <scmBranch>master</scmBranch>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
        </configuration>
        <version>2.3</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifestFile>META-INF/MANIFEST.MF</manifestFile>
          </archive>
        </configuration>
        <version>2.3</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${plugin.javadoc.version}</version>
        <configuration>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>2.2.1</version>
        <configuration>
        </configuration>
        <executions>
          <execution>
            <id>bundle-sources</id>
            <phase>package</phase>
            <goals>
              <!-- produce source artifact for main project sources -->
              <goal>jar-no-fork</goal>
              <!-- produce source artifact for project test sources -->
              <!-- <goal>test-jar-no-fork</goal> -->
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <resources>
      <resource>
        <directory>./</directory>
        <includes>
          <include>LICENSE</include>
        </includes>
      </resource>
    </resources>
  </build>
  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${plugin.javadoc.version}</version>
        <configuration>
        </configuration>
        <reportSets>
          <reportSet><!-- by default, id = "default" -->
            <reports><!-- select non-aggregate reports -->
              <report>javadoc</report>
              <report>test-javadoc</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
    </plugins>
  </reporting>
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.8.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.2</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.0.7</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <version>1.0.7</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <issueManagement>
    <system>Bitbucket</system>
    <url>https://bitbucket.org/openflowj/openflowj/issues</url>
  </issueManagement>
</project>
