# When set to true, an attempt is made for each write to the switch
# outputstream to push to the TCP socket buffer. This mode is suggested if
# latency is critical. When set to false, the first write per IO loop is
# written to the TCP socket, and subsequent writes are queued up to be written
# in the following loop to minimize the number of small write system calls.
# This mode is ideal when throughput is critical. Defaults to throughput mode,
# or false.
#controller.immediate=false
#
# The IP address to listen for OpenFlow switch connections. Defaults to
# listening on all local IP addresses.
#controller.listenAddress=<ip address>
#
# The listening port for incoming OpenFlow switch connections. Default: 6633.
controller.listenPort=6644
#
# Controls whether Nagle's algorithm is enabled on the switch TCP sockets. When
# set to true Nagle's algorithm is disabled, and false it is enabled. Default:
# true.
#controller.noDelay=true
#
# The number of threads used to handle OpenFlow switch messages. Default: 1.
#controller.threadCount=3
#
# When set to true, all existing flows are delete from a switch's flow table
# when it connects to Beacon. Default: true.
#controller.deletePreExistingFlows=true
#
#
# The following properties control the order of listeners in the pipeline for
# the given OpenFlow message type.
#controller.callbackOrdering[ERROR]=
#controller.callbackOrdering[VENDOR]=
#controller.callbackOrdering[FEATURES_REPLY]=
#controller.callbackOrdering[GET_CONFIG_REPLY]=
#controller.callbackOrdering[PACKET_IN]=topology,devicemanager,routing,switch
#controller.callbackOrdering[FLOW_REMOVED]=
#controller.callbackOrdering[PORT_STATUS]=
#controller.callbackOrdering[STATS_REPLY]=
#controller.callbackOrdering[BARRIER_REPLY]=
#controller.callbackOrdering[QUEUE_CONFIG_REPLY]=

